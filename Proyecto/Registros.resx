<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADfAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8AAADyAAAAqAAAAKsAAACrAAAAqwAAAKsAAACrAAAAqwAA
        AKsAAACrAAAAqwAAAKsAAACrAAAAqwAAAKsAAACrAAAAzgAAAP8AAAA1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAANcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAAA/wAAADUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfAAAA1wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsAAAD/AAAAMgAA
        AC4AAAAvAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8AAADXAAAAAAAA
        AAUAAACCAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAggAAAAUAAAAAAAAAawAA
        AP8AAAAmAAAA/wAAAP8AAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAA
        ANcAAAAAAAAAGwAAAN0AAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADaAAAA2gAAANoAAADdAAAAGwAA
        AAAAAABrAAAA/wAAAC8AAACHAAAA/wAAAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADfAAAA1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGsAAAD/AAAANQAAACwAAAD/AAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAN8AAADXAAAAAAAAAAAAAAB+AAAAiQAAAIkAAACJAAAAiQAAAIkAAACJAAAAiQAA
        AIkAAACJAAAAiwAAACIAAAAAAAAAawAAAP8AAAA1AAAALAAAAP8AAABzAAAAagAAAMgAAACuAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAANcAAAAAAAAAAAAAAMkAAADNAAAAzQAAAM0AAADNAAAAzQAA
        AM0AAADNAAAAzQAAAM0AAADQAAAAQQAAAAAAAABrAAAA/wAAADUAAAAsAAAA/wAAAHMAAAB/AAAA/QAA
        AN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfAAAA1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsAAAD/AAAANQAAACwAAAD/AAAAdAAA
        AAAAAADVAAAA3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8AAADXAAAAAAAAAAAAAABWAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAaQAAABAAAAAAAAAAawAAAP8AAAA1AAAALAAA
        AP8AAAB0AAAAAAAAANcAAADfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAANcAAAAAAAAAAAAA
        APkAAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD/AAAAUgAAAAAAAABrAAAA/wAA
        ADUAAAAsAAAA/wAAAHQAAAAAAAAA1wAAAN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfAAAA1wAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGsAAAD/AAAANQAAACwAAAD/AAAAdAAAAAAAAADXAAAA3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AN8AAADXAAAAAAAAAAAAAABzAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAhAAA
        ABsAAAAAAAAAawAAAP8AAAA1AAAALAAAAP8AAAB0AAAAAAAAANcAAADfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA3wAAANcAAAAAAAAAAAAAANYAAADcAAAA3AAAANwAAADcAAAA3AAAANwAAADcAAAA3AAA
        ANwAAADfAAAARwAAAAAAAABrAAAA/wAAADUAAAAsAAAA/wAAAHQAAAAAAAAA1wAAAN8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADfAAAA1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsAAAD/AAAANQAAACwAAAD/AAAAdAAAAAAAAADXAAAA3wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8AAADXAAAAAAAAAAAAAABHAAAAVwAAAFcAAABXAAAAVwAA
        AFcAAABXAAAAVwAAAFcAAABXAAAAWQAAAAsAAAAAAAAAawAAAP8AAAA1AAAALAAAAP8AAAB0AAAAAAAA
        ANcAAADfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAANcAAAAAAAAAAAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAWAAAAAAAAABrAAAA/wAAADUAAAAsAAAA/wAA
        AHQAAAAAAAAA1wAAAN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfAAAA1wAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsAAAD/AAAANQAA
        ACwAAAD/AAAAdAAAAAAAAADXAAAA3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN8AAADXAAAAAAAA
        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
        +Cf8AAgn/AAAB/wAAQf/j/8H/4AAH/+AAD8=
</value>
  </data>
</root>